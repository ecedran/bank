BANK ACCOUNT MANAGERSe trata de un programa para gestionar cuentas bancarias y realizar operaciones entre estas. Hay dos tipos de usuarios: los usuarios poseedores de cuentas y los administradores.

Al abrir el programa se generan automáticamente 1 usuario administrador y 2 usuarios de prueba con los siguientes credenciales:

+------+--------------------------+--------------------------+
| ID   | NOMBRE                   | CONTRASEÑA 		     |
+------+--------------------------+--------------------------+
| 1    | Admin			  | admin       	     |
+------+--------------------------+--------------------------+
| 2    | Eric Cedran		  | 1234		     |
+------+--------------------------+--------------------------+
| 3    | Mikel Garcilla           | 1234		     |
+------+--------------------------+--------------------------+


+---------------------------------------------------------------------------------------------------------+
| FUNCIONALIDADES DE LOS ADMINISTRADORES			                        	          | 
+---------------------------------------------------------------------------------------------------------+
CREAR USUARIOSLos administradores, previa identificación, pueden acceder a generar nuevos poseedores de cuentas en la ruta:             localhost:8080/admin/create-userMediante la transmisión de un objeto JSON con los siguientes parámetros:{    "username": "Eric Cedran",    "password": "1234",    "dateOfBirth": "1989-10-08",    "primaryAddress": {        "address": "Calle Balmes",        "city": "Barcelona",        "state": "Catalunya",        "postalCode": "08007",        "country": "España"    },    "mailingAddress": {        "address": "Calle Balmes",        "city": "Barcelona",        "state": "Catalunya",        "postalCode": "08007",        "country": "España"    }}DAR DE ALTA TERCEROSLos administradores, previa identificación, pueden dar de alta operadores externos al banco para que puedan realizar transacciones con las cuentas en la ruta:      localhost:8080/admin/create-thirdTransmisión de un objeto JSON únicamente con un parámetro nombre:        "Amazon"El programa genera un nuevo tercer operador y genera de forma automática un código hashedKey de 20 caracteres alfanuméricos. Esta clave será usada en el header para las operaciones que desee realizar el tercer operador:{    "id": 3,    "name": "Amazon",    "hashedKey": "XfcWzVEeOnIugDEsGblx"}DAR DE ALTA NUEVAS CUENTASPuede generar hasta 4 tipos de cuentas:Checking: localhost:8080/admin /new-checkingChecking Student Account se generará automáticamente si el poseedor de la cuenta es menor de 24 años. Checking Account se generará a los mayores de 24 años.Objeto JSON:{    "id1": 2,    "id2": 3,    "secretKey": "XXXX",    "balance": 1000}Devuelve la información de la cuenta generada:{    "accountNumber": 4,    "accountType": "Checking Account",    "id1": 2,    "name1": "Eric Cedran",    "id2": 3,    "name2": "Mikel Garmilla",    "balance": 1000}Saving Account: localhost:8080/admin/new-savingObjeto JSON:{    "id1": 2,    "id2": null,    "secretKey": "XXXX",    "balance": 1000,    "interestRate": 0.1,    "minimumBalance": 800}Si los valores interestRate o minimumBalance no se envían o son nulos, el programa asigna automáticamente los valores por defecto establecidos. Devuelve la información de la cuenta generada:{    "accountNumber": 5,    "accountType": "Saving Account",    "id1": 2,    "name1": "Eric Cedran",    "id2": null,    "name2": null,    "balance": 1000,    "minimumBalance": 800,    "interestRate": 0.1}Credit Account: localhost:8080/admin/new-creditObjeto JSON:{    "id1": 3,    "id2": null,    "secretKey": "XXXX",    "balance": 10000,    "interestRate": null,    "creditLimit": null}Devuelve la información de la cuenta generada:{    "accountNumber": 6,    "accountType": "Credit Card Account",    "id1": 3,    "name1": "Mikel Garmilla",    "id2": null,    "name2": null,    "balance": 10000,    "creditLimit": 100.0,    "interestRate": 0.2}Si los valores interestRate o CreditLimit no se envían, el programa asigna automáticamente los valores por defecto establecidos. MODEIFICAR LA INFORMACIÓN O LOS PRÁMETROS DE UNA CUENTA      localhost:8080/admin/change-account-info?id=      En la ruta, se identifica en el parámetro ID el número de cuenta que se quiere modificar y se envía mediante objeto JSON los parámetros que se desea modificar: {    "id1": 2,    "id2": null,    "interestRate": 0,    "minimumBalance": 0,    "creditLimit": 0}Devuelve la información de la cuenta del servidor. En caso que los parámetros no esten dentro de los valores permitidos, el programa los asigna por defecto o usando el mínimo o máximo permitido más cercano al valor deseado:{    "accountNumber": 1,    "accountType": "Checking Account",    "id1": 2,    "name1": "Eric Cedran",    "id2": null,    "name2": null,    "balance": 9000.00,    "minimumBalance": 250.00,    "monthlyMaintenanceFee": 12.00,    "penaltyFee": 40.00,    "interestRate": null,    "creditLimit": null}LISTA DE CUENTAS DE UN USUARIO      localhost:8080/admin/balance-all?id=2      En la ruta, se identifica en el parámetro ID el número de usuario y mostrará un extracto de todas las cuentas de dicho usuario con su balance:[    {        "accountId": 1,        "primaryOrSecondary": "Primary Owner",        "accountType": "Checking Account",        "balance": 9000.00    },    {        "accountId": 2,        "primaryOrSecondary": "Secondary Owner",        "accountType": "Checking Account",        "balance": 6000.00    }]ELIMINAR USUARIOS Y TERCEROSMediante las siguientes rutas, el administrador puede eliminar una cuenta o un operador externo:localhost:8080/admin/delete-account?id=localhost:8080/admin/delete-third?id=+---------------------------------------------------------------------------------------------------------+
| FUNCIONALIDADES DE LOS USUARIOS.        						                  |
+---------------------------------------------------------------------------------------------------------+
El usuario, mediante una identificación con nombre de usuario y contraseña puede acceder a las siguientes funcionalidades:Acceder a una lista de todas sus cuentas en que es poseedor principal o secundario      localhost:8080/user/account/balance-allDevuelve una lista de objetos:[    {        "accountId": 1,        "primaryOrSecondary": "Primary Owner",        "accountType": "Checking Account",        "balance": 9000.00    },    {        "accountId": 2,        "primaryOrSecondary": "Secondary Owner",        "accountType": "Checking Account",        "balance": 6000.00    },    {        "accountId": 4,        "primaryOrSecondary": "Primary Owner",        "accountType": "Checking Account",        "balance": 1000.00    },    {        "accountId": 5,        "primaryOrSecondary": "Primary Owner",        "accountType": "Saving Account",        "balance": 1000.00    }]Acceder al detalle completo de una de sus cuentas (requiere identificar la cuenta en la ruta en el parámetro id=)      localhost:8080/user/account/info?id=Devuelve el siguiente objeto:{    "accountNumber": 2,    "accountType": "Checking Account",    "id1": 3,    "name1": "Mikel Garmilla",    "id2": 2,    "name2": "Eric Cedran",    "balance": 6000.00,    "minimumBalance": 250.00,    "monthlyMaintenanceFee": 12.00,    "penaltyFee": 40.00,    "interestRate": null,    "creditLimit": null}Acceder a una lista de todos los movimientos realizados en una cuenta. Incluye las transferencias, las penalizaciones aplicadas, los intereses y los cobros o ingresos realizados con operadores terceros (requiere identificar la cuenta en la ruta en el parámetro id=).      localhost:8080/user/account/statements?id=      [    {        "date": "2022-12-11",        "description": "Transfer to the account number 2",        "amount": -1000.00    },    {        "date": "2022-12-11",        "description": "Transfer to the account number 2",        "amount": -1000.00    },    {        "date": "2022-12-11",        "description": "Transfer to the account number 2",        "amount": -500.00    },    {        "date": "2022-12-11",        "description": "Transfer to the account number 2",        "amount": -10.00    },    {        "date": "2022-12-11",        "description": "Transfer to the account number 2",        "amount": -250.00    }]      Transferir dinero de una cuenta a otra      localhost:8080/user/transfer-moneyMediante objeto JSON:{    "accountNumberOut": numeric,    "accountNumberIn": numeric,    "name": "XXXX",    "amount": numeric}Esta funcionalidad comprueba si la cuenta receptora de la transferencia es propiedad del titular con el nombre del parámetro name del objeto JSON. 

+---------------------------------------------------------------------------------------------------------+
| FUNCIONALIDADES DE LOS OPERADORES EXTERNOS (THIRD PARTYS)		                                  |
+---------------------------------------------------------------------------------------------------------+
Los operadores externos mediante identificación con un hashkey en el header pueden transferir dinero a una cuenta:      localhost:8080/third-party/send-moneyO extraer dinero:      localhost:8080/third-party/withdraw -moneyAmbas operaciones se realizan mediante el envío del mismo objeto JSON con los parámetros número de cuenta, código secreto de la cuenta y importe:{    "accountId": numeric,    "key": "String",    "amount": numeric}El código secreto debe de coincidir con el indicado en la cuenta en el momento de su creación. El importe debe enviarse en cifra positiva, en caso de indicarlo en negativo no tendrá impacto en si se realiza una operación de ingreso o extracción de dinero. +---------------------------------------------------------------------------------------------------------+
| FUNCIONALIDADES AUTOMATIZADAS										  |
+---------------------------------------------------------------------------------------------------------+
Maintenence FeeEl programa, de forma autónoma cada día a las 6 AM realiza una comprobación de las cuentas de tipo Checking y aplica mensualmente la cuota de mantenimiento asignada en dicha cuenta. Minimum BalanceEn las cuentas de tipo Checking y Saving, cada hora de forma autónoma, el programa revisa si su balance es inferior al marcado en sus parámetros como Balance mínimo. En caso de estar en situación irregular, aplica una penalización económica que queda registrada en los movimientos de la cuenta. Esta penalización solo se aplica una vez. Y no se vuelve a aplicar hasta que vuelva a caer por debajo del mínimo.Interest RateEn las cuentas de tipo Credit Card y Saving, el porgrama de forma autónoma cada dia a las 6 AM revisa si se debe aplicar el interés correspondiente a cada tipo y en su periodicidad. 